// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotificationService.Infrastructure.AppDbContext;

#nullable disable

namespace NotificationService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.Email", b =>
                {
                    b.Property<Guid>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarred")
                        .HasColumnType("bit");

                    b.Property<Guid>("MailboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailId");

                    b.HasIndex("MailboxId");

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            EmailId = new Guid("edc6ce3a-f39d-4046-8492-566ff41ac305"),
                            Body = "Hi Tran Thi B, welcome to HRM-THANHVU!",
                            IsDeleted = false,
                            IsRead = false,
                            IsStarred = false,
                            MailboxId = new Guid("7ae3d307-a006-4b26-b072-54455cf1a63c"),
                            ReceivedAt = new DateTime(2025, 5, 2, 8, 30, 0, 0, DateTimeKind.Utc),
                            Sender = "nguyenvana@hrm.tv.com",
                            Status = 0,
                            Subject = "Welcome to the team"
                        },
                        new
                        {
                            EmailId = new Guid("1fc13791-7ca7-4bbf-8eae-245666ffbcc1"),
                            Body = "Your payroll for April 2025 has been processed.",
                            IsDeleted = false,
                            IsRead = true,
                            IsStarred = true,
                            MailboxId = new Guid("7ae3d307-a006-4b26-b072-54455cf1a63c"),
                            ReceivedAt = new DateTime(2025, 5, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Sender = "nguyenvana@hrm.tv.com",
                            Status = 1,
                            Subject = "Payroll Processed"
                        },
                        new
                        {
                            EmailId = new Guid("62d38853-4303-425b-af87-1c41a9607c1c"),
                            Body = "Reminder: Weekly team meeting on Monday at 9 AM.",
                            IsDeleted = false,
                            IsRead = false,
                            IsStarred = false,
                            MailboxId = new Guid("a780e17c-f230-436f-b82e-14407d10ec06"),
                            ReceivedAt = new DateTime(2025, 5, 3, 7, 45, 0, 0, DateTimeKind.Utc),
                            Sender = "tranthib@hrm.tv.com",
                            Status = 0,
                            Subject = "Weekly Meeting Reminder"
                        });
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.EmailLog", b =>
                {
                    b.Property<Guid>("EmailLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailHeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiveMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmailLogId");

                    b.HasIndex("TemplateId");

                    b.ToTable("EmailLog");

                    b.HasData(
                        new
                        {
                            EmailLogId = new Guid("c032e3a5-3c33-4eb7-98c8-82aad3247005"),
                            CreatedAt = new DateTime(2025, 4, 4, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            EmailBody = "Chào John Doe,<br><br>Bạn đã làm việc được 22 ngày trong tháng này.<br>Tổng lương của bạn: 25,000,000 VND.<br>Hãy kiểm tra bảng lương chi tiết tại: <a href=\"https://payroll.example.com\">Bảng lương</a><br><br>Trân trọng,<br>Phòng Nhân sự",
                            EmailHeader = "Thông báo lương tháng",
                            ReceiveMail = "john.doe@example.com",
                            Status = 0,
                            TemplateId = new Guid("bcb713da-c191-44e7-af41-1a2c82a6f892")
                        },
                        new
                        {
                            EmailLogId = new Guid("77f282b8-f20b-46b1-b732-1053b2452ab1"),
                            CreatedAt = new DateTime(2025, 4, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailBody = "Chào Alice Smith,<br><br>Chào mừng bạn đến với công ty ABC Corp!<br>Ngày làm việc đầu tiên của bạn là: 2025-04-05.<br>Bạn sẽ làm việc tại phòng ban: Marketing.<br><br>Hãy liên hệ hr@example.com nếu bạn có bất kỳ thắc mắc nào.<br><br>Chúc bạn một khởi đầu thuận lợi!<br>Phòng Nhân sự",
                            EmailHeader = "Chào mừng nhân viên mới",
                            ReceiveMail = "alice.smith@example.com",
                            Status = 0,
                            TemplateId = new Guid("f727edc7-b524-4322-946c-578117f6b434")
                        },
                        new
                        {
                            EmailLogId = new Guid("a0477076-4085-439c-97c7-4c5a3d87c6f4"),
                            CreatedAt = new DateTime(2025, 4, 4, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            EmailBody = "Chào David Nguyen,<br><br>Bạn hiện có 5 ngày nghỉ phép còn lại trong năm.<br>Hãy lên kế hoạch nghỉ phép sớm để tránh hết hạn!<br><br>Trân trọng,<br>Phòng Nhân sự",
                            EmailHeader = "Nhắc nhở ngày nghỉ phép",
                            ReceiveMail = "david.nguyen@example.com",
                            Status = 0,
                            TemplateId = new Guid("08695ab8-9021-4564-857a-029c848912e7")
                        },
                        new
                        {
                            EmailLogId = new Guid("ec41061d-570f-4213-bf4a-fc5fe74aabe9"),
                            CreatedAt = new DateTime(2025, 4, 4, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailBody = "Chào Security Team,<br><br>Chúng tôi phát hiện một hoạt động đăng nhập đáng ngờ từ IP: 192.168.1.101.<br>Nếu đây không phải là bạn, vui lòng đổi mật khẩu ngay lập tức và báo cáo với IT.<br><br>Trân trọng,<br>Phòng IT",
                            EmailHeader = "Cảnh báo bảo mật",
                            ReceiveMail = "security.team@example.com",
                            Status = 0,
                            TemplateId = new Guid("cf3ddcf8-2f5c-400a-ba5f-b57c5bb9ceea")
                        });
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.EmailManager", b =>
                {
                    b.Property<Guid>("EmailManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ManagerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailManagerId");

                    b.HasIndex("EmailId");

                    b.ToTable("EmailManagers");

                    b.HasData(
                        new
                        {
                            EmailManagerId = new Guid("8727d68f-52cb-4e1e-ac38-ac16b195d9c5"),
                            Action = "Read",
                            ActionDate = new DateTime(2025, 5, 2, 9, 0, 0, 0, DateTimeKind.Utc),
                            EmailId = new Guid("edc6ce3a-f39d-4046-8492-566ff41ac305"),
                            ManagerEmail = "nguyenvana@hrm.tv.com",
                            ManagerName = "Pham Van A",
                            Notes = "Opened email upon arrival"
                        },
                        new
                        {
                            EmailManagerId = new Guid("ce9a87d5-11ac-4179-b78e-dc87c6dc8759"),
                            Action = "Forward",
                            ActionDate = new DateTime(2025, 5, 1, 12, 30, 0, 0, DateTimeKind.Utc),
                            EmailId = new Guid("1fc13791-7ca7-4bbf-8eae-245666ffbcc1"),
                            ManagerEmail = "nguyenvana@hrm.tv.com",
                            ManagerName = "Nguyen Van A",
                            Notes = "Forwarded to finance department"
                        },
                        new
                        {
                            EmailManagerId = new Guid("6d7bfcf4-26e0-4f18-bd3e-c2f616e1e509"),
                            Action = "Reply",
                            ActionDate = new DateTime(2025, 5, 3, 8, 0, 0, 0, DateTimeKind.Utc),
                            EmailId = new Guid("62d38853-4303-425b-af87-1c41a9607c1c"),
                            ManagerEmail = "nguyenvana@hrm.tv.com",
                            ManagerName = "Nguyen Van A",
                            Notes = "Confirmed attendance"
                        });
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchSQLCMD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateHeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateId");

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            TemplateId = new Guid("bcb713da-c191-44e7-af41-1a2c82a6f892"),
                            SearchSQLCMD = "SELECT EmployeeName, WorkingDays, Salary, PayrollLink FROM PayrollData WHERE DepartmentId = @DepartmentId",
                            TemplateBody = "Chào [EmployeeName],<br><br>Bạn đã làm việc được [WorkingDays] ngày trong tháng này.<br>Tổng lương của bạn: [Salary] VND.<br>Hãy kiểm tra bảng lương chi tiết tại: <a href=\"[PayrollLink]\">Bảng lương</a><img src=\"[PayrollUrl]\" alt=\"Avatar\" width=\"120\" height=\"120\" style=\"border-radius:50%;\"><br><br>Trân trọng,<br>Phòng Nhân sự",
                            TemplateHeader = "Thông báo lương tháng",
                            TemplateName = "Payroll Notification"
                        },
                        new
                        {
                            TemplateId = new Guid("cf3ddcf8-2f5c-400a-ba5f-b57c5bb9ceea"),
                            SearchSQLCMD = "SELECT EmployeeName, CompanyName, StartDate, Department, HRContact FROM Employees WHERE EmployeeId = @EmployeeId",
                            TemplateBody = "Chào [EmployeeName],<br><br>Chào mừng bạn đến với công ty [CompanyName]!<br>Ngày làm việc đầu tiên của bạn là: [StartDate].<br>Bạn sẽ làm việc tại phòng ban: [Department].<br><br>Hãy liên hệ [HRContact] nếu bạn có bất kỳ thắc mắc nào.<br><br>Chúc bạn một khởi đầu thuận lợi!<br>Phòng Nhân sự",
                            TemplateHeader = "Chào mừng nhân viên mới",
                            TemplateName = "Welcome New Employee"
                        },
                        new
                        {
                            TemplateId = new Guid("08695ab8-9021-4564-857a-029c848912e7"),
                            SearchSQLCMD = "SELECT EmployeeName, RemainingLeaves FROM EmployeeLeaves WHERE EmployeeId = @EmployeeId",
                            TemplateBody = "Chào [EmployeeName],<br><br>Bạn hiện có [RemainingLeaves] ngày nghỉ phép còn lại trong năm.<br>Hãy lên kế hoạch nghỉ phép sớm để tránh hết hạn!<br><br>Trân trọng,<br>Phòng Nhân sự",
                            TemplateHeader = "Nhắc nhở ngày nghỉ phép",
                            TemplateName = "Annual Leave Reminder"
                        },
                        new
                        {
                            TemplateId = new Guid("f727edc7-b524-4322-946c-578117f6b434"),
                            SearchSQLCMD = "SELECT EmployeeName, IPAddress FROM SecurityLogs WHERE EmployeeId = @EmployeeId",
                            TemplateBody = "Chào [EmployeeName],<br><br>Chúng tôi phát hiện một hoạt động đăng nhập đáng ngờ từ [IPAddress].<br>Nếu đây không phải là bạn, vui lòng đổi mật khẩu ngay lập tức và báo cáo với IT.<br><br>Trân trọng,<br>Phòng IT",
                            TemplateHeader = "Cảnh báo bảo mật",
                            TemplateName = "IT Security Alert"
                        });
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.Mailbox", b =>
                {
                    b.Property<Guid>("MailboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MailboxId");

                    b.ToTable("Mailboxes");

                    b.HasData(
                        new
                        {
                            MailboxId = new Guid("7ae3d307-a006-4b26-b072-54455cf1a63c"),
                            CreatedAt = new DateTime(2025, 5, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mailbox for John Doe",
                            EmployeeEmail = "tranthib@hrm.tv.com",
                            EmployeeId = "F5ECDC17-5382-4A81-470C-08DD7F1BD68D",
                            IsActive = true,
                            Name = "Tran Thi B Mailbox"
                        },
                        new
                        {
                            MailboxId = new Guid("a780e17c-f230-436f-b82e-14407d10ec06"),
                            CreatedAt = new DateTime(2025, 5, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mailbox for Jane Smith",
                            EmployeeEmail = "nguyenvana@hrm.tv.com",
                            EmployeeId = "540195F8-B154-4D15-618F-08DD85841FA5",
                            IsActive = true,
                            Name = "Nguyen Van A Mailbox"
                        });
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.Email", b =>
                {
                    b.HasOne("NotificationService.Core.Domain.Entities.Mailbox", "Mailbox")
                        .WithMany("Emails")
                        .HasForeignKey("MailboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mailbox");
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.EmailLog", b =>
                {
                    b.HasOne("NotificationService.Core.Domain.Entities.EmailTemplate", "EmailTemplate")
                        .WithMany("EmailLogs")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailTemplate");
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.EmailManager", b =>
                {
                    b.HasOne("NotificationService.Core.Domain.Entities.Email", "Email")
                        .WithMany("EmailManagers")
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.Email", b =>
                {
                    b.Navigation("EmailManagers");
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.EmailTemplate", b =>
                {
                    b.Navigation("EmailLogs");
                });

            modelBuilder.Entity("NotificationService.Core.Domain.Entities.Mailbox", b =>
                {
                    b.Navigation("Emails");
                });
#pragma warning restore 612, 618
        }
    }
}
